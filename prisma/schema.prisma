// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
  password String
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role  Role   @default(USER)
  courses  Course[]
  reviews Reviews[]
  blogs Blog[]
  refreshToken RefreshToken[]
}

model RefreshToken{
   id String @id @default(auto()) @map("_id") @db.ObjectId
   userId String   @db.ObjectId
   user   User     @relation(fields: [userId], references: [id])
   token String @unique
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

}

// BLOGS
model Blog{
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  category String 
  title String
  cover String?
  content Contents[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// COURSES

model Course {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  title String 
  category String
  cover String? 
  price Float
  rating Float?
  reviews Reviews[]
  modules Module[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  description String
  requriments String
  level String
  whoUseIt String

}

model Reviews{
   id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @db.ObjectId
  courseId String   @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  course   Course    @relation(fields: [courseId], references: [id])
  rating Float
  comment String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


}

model Module{
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  courseId String   @db.ObjectId
  course   Course    @relation(fields: [courseId], references: [id])
  title String 
  lessons Lesson[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Lesson{

   id     String   @id @default(auto()) @map("_id") @db.ObjectId
  moduleId String   @db.ObjectId
  module   Module    @relation(fields: [moduleId], references: [id])
  title String
  content Contents[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  videoCover String?
  videoUrl String?

}

type Contents{
title String?
description String?
image String?

}



model CourseCategory{
   id     String   @id @default(auto()) @map("_id") @db.ObjectId
   cover String?
   name String

}


model BlogCategory{
   id     String   @id @default(auto()) @map("_id") @db.ObjectId
   cover String?
   name String

}







enum Role{
    USER
    ADMIN
} 